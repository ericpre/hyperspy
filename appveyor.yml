
shallow_clone: true

environment:

  global:
    TEST_DEPS: "pytest pytest-cov wheel"
    NSIS_DIR: "%PROGRAMFILES(x86)%/NSIS"
    MPLBACKEND: "agg"


  matrix:

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
     - PYTHON: "C:\\Miniconda35"
       PYTHON_VERSION: "3.5.x"
       PYTHON_MAJOR: 3
       PYTHON_ARCH: "32"
       CONDA_PY: "35"
       WP_URL: 'https://github.com/winpython/winpython/releases/download/1.10.20180404/WinPython32-3.5.4.2Qt5.exe'
       WP_CRC: '207d38b1647f051346985c4bbbca9b7748608dadfde62c3601aa0a1b4cd30bb9'
       DEPS: "numpy scipy matplotlib ipython h5py sympy scikit-learn dill setuptools natsort scikit-image cython ipyparallel dask"

     - PYTHON: "C:\\Miniconda35-x64"
       PYTHON_VERSION: "3.5.x"
       PYTHON_MAJOR: 3
       PYTHON_ARCH: "64"
       CONDA_PY: "35"
       WP_URL: 'https://github.com/winpython/winpython/releases/download/1.10.20180404/WinPython64-3.5.4.2Qt5.exe'
       WP_CRC: 'bc34af4d3369fbc77d0baa44dd014ec4d10135a779f4459f2f54cda34b77229d'
       DEPS: "numpy scipy matplotlib ipython h5py sympy scikit-learn dill setuptools natsort scikit-image cython ipyparallel dask"

     - PYTHON: "C:\\Miniconda36"
       PYTHON_VERSION: "3.6.x"
       PYTHON_MAJOR: 3
       PYTHON_ARCH: "32"
       CONDA_PY: "36"
       WP_URL: 'https://github.com/winpython/winpython/releases/download/1.10.20180404/WinPython32-3.6.5.0Qt5.exe'
       WP_CRC: '83cb7ccf519a7fffc0cf6b00f0cb2d45f8d4cbf55b6e9b463fcd2534fa6f450a'
       DEPS: "numpy scipy matplotlib ipython h5py sympy scikit-learn dill setuptools natsort scikit-image cython ipyparallel dask"

     - PYTHON: "C:\\Miniconda36-x64"
       PYTHON_VERSION: "3.6.x"
       PYTHON_MAJOR: 3
       PYTHON_ARCH: "64"
       CONDA_PY: "36"
       WP_URL: 'https://github.com/winpython/winpython/releases/download/1.10.20180404/WinPython64-3.6.5.0Qt5.exe'
       WP_CRC: 'cdf56107a0b106e8a34c3f5680521677c7798d5459135d3272053a0e8bd3e94b'
       DEPS: "numpy scipy matplotlib ipython h5py sympy scikit-learn dill setuptools natsort scikit-image cython ipyparallel dask"



init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
  - "ECHO %APPVEYOR_BUILD_FOLDER%"
  - "ECHO %CMD_IN_ENV%"

install:
  - ps: Add-AppveyorMessage "Starting install..."
  # Prepend Python to the PATH
  - "SET ORIGPATH=%PATH%"
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import sys; print(sys.version)\""  # this gives more info
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Install the dependencies of the project.
  - ps: Add-AppveyorMessage "Installing conda packages..."
  - "%CMD_IN_ENV% conda install -yq %TEST_DEPS%"
  - "%CMD_IN_ENV% conda install -yq %DEPS%"
  - "pip install pytest-mpl"

  # Having 'sip' folder on path confuses import of `sip`.
  #- "%CMD_IN_ENV% conda install -yq pip"

  - ps: Add-AppveyorMessage "Installing hyperspy..."
  - "python setup.py install"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Run the project tests
  - ps: Add-AppveyorMessage "Running tests..."
  - "python setup.py build_ext --inplace"
  - "py.test --mpl"
  - "python setup.py clean"
  - ps: Add-AppveyorMessage "Testing completed."

after_test:
  - python setup.py bdist_wheel

artifacts:
  - path: dist\*.whl
    name: win_wheels

on_failure:
  - ps: $Env:image_comparison_filename = 'image_comparison_' + $Env:PYTHON_VERSION + '_' + $Env:PYTHON_ARCH + 'bits.zip'
  - ps: 7z a -r $Env:image_comparison_filename C:\Users\appveyor\AppData\Local\Temp\1\*png
  - ps: Push-AppveyorArtifact $Env:image_comparison_filename

  #Auto-deployment of bundle installer for tags:
before_deploy:
  - ps: Add-AppveyorMessage "Running deployment step..."
  - "pip install winpython"
  - "pip install https://github.com/ericpre/hyperspy-bundle/archive/fix_for_last_winpython.zip"
  # Download WinPython installer if not cached
  - ps: Add-AppveyorMessage "Installing WinPython..."
  - "SET WP_INSTDIR=%USERPROFILE%\\wpdir\\WP-%PYTHON_ARCH%\\"
  - "SET WP_EXE=%USERPROFILE%/wpdir/WinPython%PYTHON_MAJOR%-%PYTHON_ARCH%bit.exe"
  - "mkdir %USERPROFILE%\\wpdir"
  - ps: appveyor DownloadFile $Env:WP_URL -FileName $Env:WP_EXE
  - ps: Write-Output (Get-FileHash $Env:WP_EXE)
  - ps: if ((Get-FileHash $Env:WP_EXE).Hash -ne $Env:WP_CRC) { exit(1) }
  - ps: (& $Env:WP_EXE /S /D=$Env:WP_INSTDIR | Out-Null )
  - "ls %USERPROFILE%/wpdir"
  - "ls %WP_INSTDIR%"
  - "ren %WP_INSTDIR%\\settings\\pydistutils.cfg pydistutils_bak.cfg"
  # we rename pydistutils temporaly to enable use of msvc

  # Patch NSIS to allow longer strings
  - ps: Add-AppveyorMessage "Setting up WinPython environment..."
  - ps: Start-FileDownload ('http://freefr.dl.sourceforge.net/project/nsis/NSIS%203/3.03/nsis-3.03-strlen_8192.zip') ../nsis_patch.zip
  - ps: if ((Get-FileHash '../nsis_patch.zip').Hash -ne '023d637df9cd146f2d207fbbc627a5f63e5f71fea012523797c5af6bf342704b') { exit(1) }
  - "7z x ../nsis_patch.zip -o%NSIS_DIR% -aoa"
  - ps: Start-FileDownload ('http://nsis.sourceforge.net/mediawiki/images/e/eb/Textreplace.zip') ../Textreplace.zip
  - ps: if ((Get-FileHash '../Textreplace.zip').Hash -ne '6462C0C22E87E7C81DD9076D40ACC74C515243A56F10F4F8FE720F7099DB3BA2') { exit(1) }
  - "7z x ../Textreplace.zip -o%NSIS_DIR% -aoa"
  - ps: Start-FileDownload ('http://nsis.sourceforge.net/mediawiki/images/8/8f/UAC.zip') ../UAC.zip
  - ps: if ((Get-FileHash '../UAC.zip').Hash -ne '20E3192AF5598568887C16D88DE59A52C2CE4A26E42C5FB8BEE8105DCBBD1760') { exit(1) }
  - "7z x ../UAC.zip -o%NSIS_DIR% -aoa"
  # Install current hyperspy in WinPython
  - "SET PATH=%ORIGPATH%"
  - "%CMD_IN_ENV% %WP_INSTDIR%/scripts/env.bat"
  # Give info about python vesion and compiler used to compile the python
  - "%CMD_IN_ENV% python.exe -c \"import sys; print(sys.version)\""

  - "%CMD_IN_ENV% pip install start_jupyter_cm"
  - "%CMD_IN_ENV% pip install .[all]"

  # Try to run twice as workaround for permission error
  - "%CMD_IN_ENV% pip install https://github.com/hyperspy/hyperspyUI/archive/master.zip || pip install https://github.com/hyperspy/hyperspyUI/archive/master.zip"
  # setting back the config:
  - "ren %WP_INSTDIR%\\settings\\pydistutils_bak.cfg pydistutils.cfg"
  # Custom installer step
  - ps: Add-AppveyorMessage "Creating installer..."
  - "%PYTHON%/python.exe -m hspy_bundle.configure_installer %USERPROFILE%/wpdir %PYTHON_ARCH% %APPVEYOR_REPO_TAG_NAME%"
  - "\"%NSIS_DIR%/makensis.exe\" /V3 NSIS_installer_script-%PYTHON_ARCH%bit.nsi"
  - ps: Add-AppveyorMessage "Installer created! Re-run tests in Winpython environment..."
  # Re-run tests in WinPython environment
  - ps: if($Env:PYTHON_VERSION -eq "3.5.x") {$Env:PY_VERSION="3.5.4"} else {$Env:PY_VERSION="3.6.5"}
  - ps: if($Env:PYTHON_ARCH -eq "64") {$Env:PYTHON_DIR_NAME="python-"+$Env:PY_VERSION+".amd64"} else {$Env:PYTHON_DIR_NAME="python-"+$Env:PY_VERSION}
  - "SET BUNDLE_INST_NAME=HyperSpy-%APPVEYOR_REPO_TAG_NAME%-Bundle-Windows-%PY_VERSION%-%PYTHON_ARCH%bit.exe"
  - "ren HyperSpy-%APPVEYOR_REPO_TAG_NAME%-Bundle-Windows-%PYTHON_ARCH%bit.exe %BUNDLE_INST_NAME%"
  - "SET HYPERSPY_DIR=%WP_INSTDIR%\\%PYTHON_DIR_NAME%\\Lib\\site-packages\\hyperspy"
  - ps: py.test --mpl $Env:HYPERSPY_DIR
  - ps: Add-AppveyorMessage "Tests finished! Pushing to GitHub..."
  - "appveyor PushArtifact %BUNDLE_INST_NAME%"

deploy:
  provider: GitHub
  auth_token:
    #   to266:
    #secure: ptV5Dkz3pSVdjD0qRDpxJgjVlddFtleZ+B+c2X1Fg67P8OX3bHWVktRmlj6hfLhM
    #   vidartf:
    #secure: KwAfARhGEqOnZHltPB6kKu8xmnoiGSk7NMYJBIEbWvFCuVnepoPV7ZcIjUN3pUpK
    #   sem-geologist:
    #secure: RRqUkx9H5VuFNITmm+YzgB0qnqgVGPH1yrPVxb4oCD+FAjcTch2WZAiPEKn4L6w6
    #   ericpre:
    secure: ae8XsPI+vKJI9AWm0r9+ec71CIkXcnCHlNIQ57v+87hh5k1xuAAxIOi1CFKEmmZv
  artifact: /.*\.exe/, win_wheels  # upload all exe installers and wheels to release assets
  draft: false
  prerelease: false
  force_update: true
  on:
    appveyor_repo_tag: true        # deploy on tag push only
